#
#
# Paramétrage des fichiers d'entrées et de sortie
#
#
# Toutes les propriétés marquées comme input.file sont les fichiers de données au format CSV pour les
# différents types de données. Cela permet de travailler sans connexion internet / Téléchargement des données
input.file.masterclass=data_export/2017_11_16_00-30/Liste_masterclasses.csv
input.file.salles=data_export/2017_11_16_00-30/Liste_salles.csv
input.file.participants=data_export/2017_11_16_00-30/Liste_inscrits.csv
input.file.chorales=data_export/2017_11_16_00-30/Liste_chorales.csv
input.file.solo_geographique=data_export/2017_11_16_00-30/Liste_SoloGeographique.csv
input.file.groupe_concert=data_export/2017_11_16_00-30/Liste_GroupeConcert.csv
# Tous les fichiers output.file sont les dossiers résultants de l'aglorithme
output.file.salle_mc=data_export/repartition_salle_mc.csv
output.file.badges=data_export/badges.csv
output.file.groupe_evangelisation=data_export/groupe_evangelisation.csv
output.file.groupe_concert=data_export/groupe_concert.csv
output.file.mailing_list=data_export/mailing_list.txt
output.file.nb_part_by_mc_and_creneaux=data_export/Nb_participants_by_MC.csv
output.file.ge_participants_relation=data_export/groupeE_participant_relation.csv
# C'est le dossier dans lequel sont exportées les différentes listes de participant par MC par créneau
output.dir.masterclass_checklist=data_export/masterclasses/
#
#
# Paramétrage de l'algorithme
#
#
# Caractère indiquant un vrai / faux dans les feuilles Excel
input.value.boolean_marker=X
# Nombre de place que l'on veut se laisser par salle
# Exemple : Garder deux places par salle pour les volontaires
input.value.nb_places_marge_salle=0
#Nombre de voeux max par participant (5 en 2017)
#Attention si ce nombre change il faudra penser à modifier org.ecclesiacantic.model.data.archi.EnumDataColumImport
input.value.max_participant_voeux=5
#Nombre de voeux pris à prendre en compte par participant (nombre de créneaux différents : 3 en 2017)
input.value.nb_voeu_to_consider=3
# Permet de définir le nombre de MC que l'on classe parmi les moins voulues.
# En fonction de ce paramétrage, on va essayer d'attribuer cette MC quel que soit le niveau des voeux des participants
# pour s'assurer qu'elle soit remmplie.
input.value.less_popular_mc_number=11
# Permet de définir le nombre de salle beaucoup plus grandes que la moyenne pour y mettre les MCs les plus demandées en permettant ainsi
# de statisfaire le plus de voeux.
input.value.huge_salles_mc_number=3
# Nombre de place minimale pour une MC, en fonction de cela on met, en fonction de leurs voeux au moins X personnes
# dans cette MC même si ce n'est pas dans les premiers choix pour les MCs les moins demandées
input.value.min_part_number_for_mc=10
# Le full_factor est un pourcentage permettant de remplir, dans un premier temps, les salles jusqu'à X % (10% = 0.1)
# ainsi, lors d'une seconde passe de l'algorithme, celui-ci a des contraintes supplémentaires pour mieux placer les gens en fonction
# des événements auxquels ils ont déjà été inscrits par l'algorithme lors de la première passe.
#   Le min_full_factor et max_full_factor permettent de donner une échelle de test. L'algotithme va itérer du min au max par pas de 0.5% (=0.05 en valeur non relative)
#   Cela influe donc sur le nombre de répartition possibles testées
input.value.min_full_factor=0.1
input.value.max_full_factor=0.2
#  Le lessUsedPart
input.value.min_lessUsedPart=11
input.value.max_lessUsedPart=11
# Permet de prendre en compte les participants dont les voeux sont incohérents (1 pour prise en compte, 0 sinon)
input.value.skip_malformed_voeu_repartition=0
# Permet de lancer ou pas la répartition des participants en groupes d'évangélisation (1 pour traitement, 0 sinon)
#   Cela est utile dans un premier temps pour former ces groupes d'évangélisation. Ensuite, une fois qu'ils sont fixés ils ne doivent
#   plus bouger pour permettre d'être une données d'entrée et non une donnée de sortie. On doit pouvoir se base sur cette information
input.value.compute_groupe_evangelisation_repartition=0
# Permet de savoir si on trie la liste des participant en fonction de leur numéro de billet ou pas
#   Cela avantagerai les personnes qui se sont inscrites plus tôt si le numéro de billet respecte l'ordre chronologie
#   Ce n'est pas forcément la meilleure manière d'obtenir le meilleur résultat avec l'algorithme
input.value.use_sorted_participant_list=0
# Permet de définir le nombre de voeux à prendre en compte pour effectuer l'initialisation suivante :
#   En fonction des demandes des participants et des disponibilités des masterclasse
#   définir le nombre minimum de place que doit faire la salle où la MC aura lieu pour que tous les
#   participants puissent avoir dans leurs n premiers choix.
#
# Le choix par défaut est 3
input.value.nb_voeux_considered=3
#
#
#   Récupération des données depuis Google
#
#
# Compte mail devant autoriser l'accès à son Drive pour que l'algorithme puisse récupérer les données depuis Google.
# Il faut pour cela créer une clef API Google (se référer à la documentation Google pour ce point)
input.google.api_email=
#Deux possibilités : google (récupère les données depuis Google) / local (utilise les fichiers sur le disque)
input.mode=local
# Pour chacun des groupes suivants, ldes données à saisir sont similaires :
#   1 : L'id de la feuille Google
input.google.participant.google_id=
#   2 : La plage de données à récupérer : Le nom de l'onglet et la plage sur cette même feuille
input.google.participant.data_range=Fichier inscrits 15/11 00h30!A1:AS
#   3 : Le nom du fichier de résultat dans lequel sera enregistré les données récupérées depuis Google
input.google.participant.result_file_name=Liste_inscrits.csv
# On recommence, ici avec les données de masterclass
input.google.masterclasse.google_id=
input.google.masterclasse.data_range=Feuil1!A1:F
input.google.masterclasse.result_file_name=Liste_masterclasses.csv
input.google.salle.google_id=
input.google.salle.data_range=Feuille 1!A1:I
input.google.salle.result_file_name=Liste_salles.csv
input.google.chorale.google_id=
input.google.chorale.data_range=Liste des groupes par chorale!A1:C
input.google.chorale.result_file_name=Liste_chorales.csv
input.google.solo_geographique.google_id=
input.google.solo_geographique.data_range=Liste des groupes par departement!A1:F
input.google.solo_geographique.result_file_name=Liste_SoloGeographique.csv
input.google.groupe_concert.google_id=
input.google.groupe_concert.data_range=Liste des groupes de concert!A1:B
input.google.groupe_concert.result_file_name=Liste_GroupeConcert.csv
